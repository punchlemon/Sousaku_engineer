{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst todo1 = {\n  id: 0,\n  text: 'shigoto',\n  completed: false,\n  user_ids: [0]\n};\nconst initialState = {\n  todos: [todo1]\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        text: action.payload,\n        completed: false,\n        user_ids: []\n      };\n      state.todos.push(newTodo);\n    },\n    toggleTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    deleteTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodo,\n  toggleTodo,\n  deleteTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","todo1","id","text","completed","user_ids","initialState","todos","todoSlice","name","reducers","addTodo","state","action","newTodo","Date","now","payload","push","toggleTodo","todo","find","deleteTodo","filter","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/todoSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Todo } from './types'\n\ninterface TodoState {\n  todos: Todo[]\n}\n\nconst todo1: Todo = {\n  id: 0,\n  text: 'shigoto',\n  completed: false,\n  user_ids: [0,],\n}\n\nconst initialState: TodoState = {\n  todos: [todo1,],\n}\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action: PayloadAction<string>) => {\n      const newTodo: Todo = {\n        id: Date.now(),\n        text: action.payload,\n        completed: false,\n        user_ids: [],\n      }\n      state.todos.push(newTodo)\n    },\n    toggleTodo: (state, action: PayloadAction<number>) => {\n      const todo = state.todos.find((todo) => todo.id === action.payload)\n      if (todo) {\n        todo.completed = !todo.completed\n      }\n    },\n    deleteTodo: (state, action: PayloadAction<number>) => {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload)\n    },\n  },\n})\n\nexport const { addTodo, toggleTodo, deleteTodo } = todoSlice.actions\n\nexport default todoSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,KAAW,GAAG;EAClBC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,CAAC,CAAC;AACd,CAAC;AAED,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,CAACN,KAAK;AACf,CAAC;AAED,MAAMO,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACjD,MAAMC,OAAa,GAAG;QACpBZ,EAAE,EAAEa,IAAI,CAACC,GAAG,CAAC,CAAC;QACdb,IAAI,EAAEU,MAAM,CAACI,OAAO;QACpBb,SAAS,EAAE,KAAK;QAChBC,QAAQ,EAAE;MACZ,CAAC;MACDO,KAAK,CAACL,KAAK,CAACW,IAAI,CAACJ,OAAO,CAAC;IAC3B,CAAC;IACDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACpD,MAAMO,IAAI,GAAGR,KAAK,CAACL,KAAK,CAACc,IAAI,CAAED,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKW,MAAM,CAACI,OAAO,CAAC;MACnE,IAAIG,IAAI,EAAE;QACRA,IAAI,CAAChB,SAAS,GAAG,CAACgB,IAAI,CAAChB,SAAS;MAClC;IACF,CAAC;IACDkB,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACgB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKW,MAAM,CAACI,OAAO,CAAC;IACxE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,OAAO;EAAEQ,UAAU;EAAEG;AAAW,CAAC,GAAGd,SAAS,CAACgB,OAAO;AAEpE,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}