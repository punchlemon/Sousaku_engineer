{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  option: 'Todo'\n};\nconst optionSlice = createSlice({\n  name: 'option',\n  initialState,\n  reducers: {\n    toggleOption: state => {\n      state.option = state.option === 'Todo' ? 'User' : 'Todo';\n    }\n  }\n});\nexport const {\n  toggleOption\n} = optionSlice.actions;\nexport default optionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","option","optionSlice","name","reducers","toggleOption","state","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/optionSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Option } from './types'\n\ninterface OptionState {\n  option: Option\n}\n\nconst initialState: OptionState = {\n  option: 'Todo'\n}\n\nconst optionSlice = createSlice({\n  name: 'option',\n  initialState,\n  reducers: {\n    toggleOption: (state) => {\n      state.option = state.option === 'Todo' ? 'User' : 'Todo'\n    },\n  },\n})\n\nexport const { toggleOption } = optionSlice.actions\n\nexport default optionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,QAAQ;EACdH,YAAY;EACZI,QAAQ,EAAE;IACRC,YAAY,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;IAC1D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAa,CAAC,GAAGH,WAAW,CAACK,OAAO;AAEnD,eAAeL,WAAW,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}