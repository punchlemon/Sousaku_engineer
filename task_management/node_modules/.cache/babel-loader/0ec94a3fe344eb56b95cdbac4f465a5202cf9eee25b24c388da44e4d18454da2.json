{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todos: []\n};\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        text: action.payload,\n        completed: false\n      };\n      state.todos.push(newTodo);\n    },\n    toggleTodo: (state, action) => {\n      const todo = state.todos.find(todo => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    deleteTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodo,\n  toggleTodo,\n  deleteTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","todos","todoSlice","name","reducers","addTodo","state","action","newTodo","id","Date","now","text","payload","completed","push","toggleTodo","todo","find","deleteTodo","filter","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/todoSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Todo } from './types';\n\ninterface TodoState {\n  todos: Todo[];\n}\n\nconst initialState: TodoState = {\n  todos: [],\n};\n\nconst todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action: PayloadAction<string>) => {\n      const newTodo: Todo = {\n        id: Date.now(),\n        text: action.payload,\n        completed: false,\n      };\n      state.todos.push(newTodo);\n    },\n    toggleTodo: (state, action: PayloadAction<number>) => {\n      const todo = state.todos.find((todo) => todo.id === action.payload);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n    deleteTodo: (state, action: PayloadAction<number>) => {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\n    },\n  },\n});\n\nexport const { addTodo, toggleTodo, deleteTodo } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACjD,MAAMC,OAAa,GAAG;QACpBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEL,MAAM,CAACM,OAAO;QACpBC,SAAS,EAAE;MACb,CAAC;MACDR,KAAK,CAACL,KAAK,CAACc,IAAI,CAACP,OAAO,CAAC;IAC3B,CAAC;IACDQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACpD,MAAMU,IAAI,GAAGX,KAAK,CAACL,KAAK,CAACiB,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAAC;MACnE,IAAII,IAAI,EAAE;QACRA,IAAI,CAACH,SAAS,GAAG,CAACG,IAAI,CAACH,SAAS;MAClC;IACF,CAAC;IACDK,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACmB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAAC;IACxE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,OAAO;EAAEW,UAAU;EAAEG;AAAW,CAAC,GAAGjB,SAAS,CAACmB,OAAO;AAEpE,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}