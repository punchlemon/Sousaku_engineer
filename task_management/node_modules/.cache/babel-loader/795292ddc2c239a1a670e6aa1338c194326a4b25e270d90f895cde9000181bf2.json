{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  users: []\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      const newUser = {\n        id: Date.now(),\n        text: action.payload,\n        todo_id: []\n      };\n      state.users.push(newUser);\n    },\n    // deleteUser: (state, action: PayloadAction<number>) => {\n    //   const user = state.users.find((user) => user.id === action.payload)\n    //   if (user) {\n    //     user.deleted = !user.deleted\n    //   }\n    // },\n    deleteTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodo,\n  toggleTodo,\n  deleteTodo\n} = todoSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","users","userSlice","name","reducers","addUser","state","action","newUser","id","Date","now","text","payload","todo_id","push","deleteTodo","todos","filter","todo","addTodo","toggleTodo","todoSlice","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { User } from './types'\n\ninterface UserState {\n  users: User[]\n}\n\nconst initialState: UserState = {\n  users: [],\n}\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action: PayloadAction<string>) => {\n      const newUser: User = {\n        id: Date.now(),\n        text: action.payload,\n        todo_id: []\n      }\n      state.users.push(newUser)\n    },\n    // deleteUser: (state, action: PayloadAction<number>) => {\n    //   const user = state.users.find((user) => user.id === action.payload)\n    //   if (user) {\n    //     user.deleted = !user.deleted\n    //   }\n    // },\n    deleteTodo: (state, action: PayloadAction<number>) => {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload)\n    },\n  },\n})\n\nexport const { addTodo, toggleTodo, deleteTodo } = todoSlice.actions\n\nexport default userSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC5BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACjD,MAAMC,OAAa,GAAG;QACpBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAEL,MAAM,CAACM,OAAO;QACpBC,OAAO,EAAE;MACX,CAAC;MACDR,KAAK,CAACL,KAAK,CAACc,IAAI,CAACP,OAAO,CAAC;IAC3B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACAQ,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACW,KAAK,GAAGX,KAAK,CAACW,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACV,EAAE,KAAKF,MAAM,CAACM,OAAO,CAAC;IACxE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,OAAO;EAAEC,UAAU;EAAEL;AAAW,CAAC,GAAGM,SAAS,CAACC,OAAO;AAEpE,eAAerB,SAAS,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}