{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst user1 = {\n  id: 0,\n  text: 'yano',\n  todoIds: [0]\n};\nconst initialState = {\n  users: [user1]\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      const newUser = {\n        id: Date.now(),\n        text: action.payload,\n        todoIds: []\n      };\n      state.users.push(newUser);\n    },\n    deleteUser: (state, action) => {\n      state.users = state.users.filter(user => user.id !== action.payload);\n    },\n    assign: (state, action) => {},\n    unassign: (state, action) => {},\n    addTodoIds: (state, action) => {\n      const user = state.users.find(user => user.id === action.payload.userId);\n      const todoId = action.payload.todoId;\n      if (user) {\n        user.todoIds.push(todoId);\n      }\n      // addTodoIdsに渡されるuserIdは存在する数値が確実に渡されると思う、、、たぶん\n    }\n  }\n});\n\nexport const {\n  addUser,\n  deleteUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","user1","id","text","todoIds","initialState","users","userSlice","name","reducers","addUser","state","action","newUser","Date","now","payload","push","deleteUser","filter","user","assign","unassign","addTodoIds","find","userId","todoId","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { User } from './types'\n\ninterface UserState {\n  users: User[]\n}\n\ninterface assignPayload {\n  userId: number,\n  todoId: number,\n}\n\ninterface unassignPayload {\n  userId: number,\n  todoId: number,\n}\n\nconst user1: User = {\n  id: 0,\n  text: 'yano',\n  todoIds: [0,]\n}\n\nconst initialState: UserState = {\n  users: [user1],\n}\n\nconst userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    addUser: (state, action: PayloadAction<string>) => {\n      const newUser: User = {\n        id: Date.now(),\n        text: action.payload,\n        todoIds: [],\n      }\n      state.users.push(newUser)\n    },\n    deleteUser: (state, action: PayloadAction<number>) => {\n      state.users = state.users.filter((user) => user.id !== action.payload)\n    },\n    assign: (state, action: PayloadAction<assignPayload>) => {\n\n    },\n    unassign: (state, action: PayloadAction<unassignPayload>) => {\n\n    },\n    addTodoIds: (state, action: PayloadAction<assignPayload>) => {\n      const user = state.users.find(user => user.id === action.payload.userId)\n      const todoId = action.payload.todoId\n      if (user) {\n        user.todoIds.push(todoId)\n      }\n      // addTodoIdsに渡されるuserIdは存在する数値が確実に渡されると思う、、、たぶん\n    }\n    \n  },\n})\n\nexport const { addUser, deleteUser } = userSlice.actions\n\nexport default userSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAiB7D,MAAMC,KAAW,GAAG;EAClBC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,CAAC,CAAC;AACb,CAAC;AAED,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,CAACL,KAAK;AACf,CAAC;AAED,MAAMM,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACjD,MAAMC,OAAa,GAAG;QACpBX,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;QACdZ,IAAI,EAAES,MAAM,CAACI,OAAO;QACpBZ,OAAO,EAAE;MACX,CAAC;MACDO,KAAK,CAACL,KAAK,CAACW,IAAI,CAACJ,OAAO,CAAC;IAC3B,CAAC;IACDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKU,MAAM,CAACI,OAAO,CAAC;IACxE,CAAC;IACDK,MAAM,EAAEA,CAACV,KAAK,EAAEC,MAAoC,KAAK,CAEzD,CAAC;IACDU,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAsC,KAAK,CAE7D,CAAC;IACDW,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAoC,KAAK;MAC3D,MAAMQ,IAAI,GAAGT,KAAK,CAACL,KAAK,CAACkB,IAAI,CAACJ,IAAI,IAAIA,IAAI,CAAClB,EAAE,KAAKU,MAAM,CAACI,OAAO,CAACS,MAAM,CAAC;MACxE,MAAMC,MAAM,GAAGd,MAAM,CAACI,OAAO,CAACU,MAAM;MACpC,IAAIN,IAAI,EAAE;QACRA,IAAI,CAAChB,OAAO,CAACa,IAAI,CAACS,MAAM,CAAC;MAC3B;MACA;IACF;EAEF;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEhB,OAAO;EAAEQ;AAAW,CAAC,GAAGX,SAAS,CAACoB,OAAO;AAExD,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}