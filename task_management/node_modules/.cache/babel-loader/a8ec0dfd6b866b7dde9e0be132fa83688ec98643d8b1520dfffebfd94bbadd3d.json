{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  select: 'Todo'\n};\nconst selectSlice = createSlice({\n  name: 'selects',\n  initialState,\n  reducers: {\n    toggleSelect: (state, action) => {\n      state.select = state.select === 'Todo' ? 'User' : 'Todo';\n    }\n  }\n});\nexport const {\n  toggleSelect\n} = selectSlice.actions;\nexport default selectSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","select","selectSlice","name","reducers","toggleSelect","state","action","actions","reducer"],"sources":["/Users/reiji/Documents/Sousaku/chakra-ui-test/src/redux/selectSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Select } from './types'\n\ninterface SelectState {\n  select: Select\n}\n\nconst initialState: SelectState = {\n  select: 'Todo'\n}\n\nconst selectSlice = createSlice({\n  name: 'selects',\n  initialState,\n  reducers: {\n    toggleSelect: (state, action: PayloadAction<string>) => {\n      state.select = state.select === 'Todo' ? 'User' : 'Todo'\n    },\n  },\n})\n\nexport const { toggleSelect } = selectSlice.actions\n\nexport default selectSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAO7D,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGH,WAAW,CAAC;EAC9BI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MACtDD,KAAK,CAACL,MAAM,GAAGK,KAAK,CAACL,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;IAC1D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAa,CAAC,GAAGH,WAAW,CAACM,OAAO;AAEnD,eAAeN,WAAW,CAACO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}